% Assignment 4 Computer Vision 2016
% author: Ysbrand Galama, 10262067
% Code copied from my previous experience with convolutions:
%   BSc KI cource Beeldverwerken, assignment 4 (2013)
%   and my improvements assisting the same course (2014)

% This function uses the RANSAC algorithm on the given Data
% with given error, iterations k and part of the first step p
% it returns the median m value and the inliers IN
function [T, bestIN, out] = RANSAC(Data,eps,k,pv_mat)
    [~,x] = size(Data);
    bestIN = [];
    out = [];
    %pv_mat_tmp = pv_mat;
    for i=1:k % loop iteratins
        
        perm = randperm(x); %
        IN = Data(:,perm(1:8)); % get a random permutatio of 8 points
        other = Data(:,perm(9:end));
        F = estimateProjectionMatrix(IN(1:2,:),IN(3:4,:));
        %a = M*[other(1:2,:);ones(1,x-4)];
        %a = a ./ repmat(a(3,:),3,1);
        %dis = sqrt(sum( (a(1:2,:)-other(3:4,:)).^2 ));
        %truePos = other(:,dis < eps); % threshhold
        o = ones(1,size(other,2));
        pa = [other(1:2,:);o];
        pb = [other(3:4,:);o];
        Fpa = (F*pa).^2;
        Fpb = (F'*pb).^2;
        dis = diag( pb'*F*pa )'.^2 ./ ( Fpa(1,:)./Fpa(3,:) + Fpa(2,:)./Fpa(3,:) + Fpb(1,:)./Fpb(3,:) + Fpb(2,:)./Fpb(3,:) );
        
        truePos = other(:,dis < eps);
        
        if size(truePos,2) > size(bestIN,2)
            bestIN = truePos;
            out = other(:,dis >= eps);
            temp = perm(9:end);
            idx = temp(dis<eps);
            
        end
    end %end for loop iteration
    T = estimateProjectionMatrix(bestIN(1:2,:),bestIN(3:4,:));
end % end function